<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-08T18:38:31 EEST" name="Default suite" finished-at="2024-09-08T18:46:59 EEST" duration-ms="508873">
    <groups>
    </groups>
    <test started-at="2024-09-08T18:38:31 EEST" name="Default test" finished-at="2024-09-08T18:46:59 EEST" duration-ms="508873">
      <class name="Tests.CreateNewReturnInvoiceTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:Tests.CreateNewReturnInvoiceTest@4082ba93]" started-at="2024-09-08T18:38:27 EEST" name="setUp" finished-at="2024-09-08T18:38:31 EEST" duration-ms="3134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Tests.CreateNewReturnInvoiceTest@4082ba93]" started-at="2024-09-08T18:38:31 EEST" name="beforeClass" finished-at="2024-09-08T18:38:31 EEST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="login()[pri:0, instance:Tests.CreateNewReturnInvoiceTest@4082ba93]" started-at="2024-09-08T18:38:31 EEST" name="login" finished-at="2024-09-08T18:38:38 EEST" duration-ms="6260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="createNewPurchaseCashbackInvoice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:Tests.CreateNewReturnInvoiceTest@4082ba93]" started-at="2024-09-08T18:38:38 EEST" name="createNewPurchaseCashbackInvoice" data-provider="getPurchasesCashbackInvoiceData" finished-at="2024-09-08T18:46:59 EEST" duration-ms="501770" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[p_Cashback001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Nahla]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Aug 01 2024]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Aug 02 2024]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[test invoice notes]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[SA_PU_S050-مرتجع]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Argument is of an illegal type: org.openqa.selenium.By$ByXPath]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Argument is of an illegal type: org.openqa.selenium.By$ByXPath
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:82)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:465)
at Pages.CreateNewReturnInvoicePage.CreateNewCashbackInvoiceStep3(CreateNewReturnInvoicePage.java:105)
at Tests.CreateNewReturnInvoiceTest.createNewPurchaseCashbackInvoice(CreateNewReturnInvoiceTest.java:209)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewPurchaseCashbackInvoice -->
      </class> <!-- Tests.CreateNewReturnInvoiceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
