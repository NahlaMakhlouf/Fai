package Tests;

import Pages.LoginPage;
import Pages.DashboardPage;

import java.io.FileNotFoundException;
import java.io.IOException;

import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import TestData.ExcelDataProvider;
import Pages.CompanyDashboardPage;
import Pages.SalesPage;
import Pages.PurchasesPage;
import Pages.CreateNewInvoicePage;
import Pages.CreateNewReturnInvoicePage;

public class CreateNewReturnInvoiceTest extends TestBase {
	LoginPage loginPage;
	DashboardPage dashboard;
	CompanyDashboardPage companyDashboard;
	SalesPage salesModule;
	PurchasesPage purchasesModule;
	CreateNewInvoicePage createNewInvoicePage;
	CreateNewReturnInvoicePage createNewReturnIncoicePage;

	@BeforeClass
	public void beforeClass() {
		loginPage = new LoginPage(driver);
		dashboard = new DashboardPage(driver);
		companyDashboard = new CompanyDashboardPage(driver);
		salesModule = new SalesPage(driver);
		purchasesModule = new PurchasesPage(driver);
		createNewInvoicePage = new CreateNewInvoicePage(driver);
		createNewReturnIncoicePage = new CreateNewReturnInvoicePage(driver);
	}

	@BeforeMethod
	public void login() throws InterruptedException {
		loginPage.login("nahlamakhlouf1@gmail.com", "123456");
		dashboard.browseCompany("Automation");
	}

	@DataProvider
	public static Object[][] getSalesReturnInvoiceData() throws FileNotFoundException, IOException {
		ExcelDataProvider.openExcel(".\\src\\test\\resources\\data.xlsx", "salesReturn"); 
		Object[][] data = ExcelDataProvider.getSheetData();
		return data;
	}
	
	@DataProvider
	public static Object[][] getSalesReturnWithoutReferenceInvoiceData() throws FileNotFoundException, IOException {
		ExcelDataProvider.openExcel(".\\src\\test\\resources\\data.xlsx", "salesReturnWithoutRef"); 
		Object[][] data = ExcelDataProvider.getSheetData();
		return data;
	}
	
	@DataProvider
	public static Object[][] getSalesCashbackInvoiceData() throws FileNotFoundException, IOException {
		ExcelDataProvider.openExcel(".\\src\\test\\resources\\data.xlsx", "salesCashback"); 
		Object[][] data = ExcelDataProvider.getSheetData();
		return data;
	}

	@Test(dataProvider = "getSalesReturnInvoiceData", priority = 1)
	public void createNewReturnSalesInvoice(String referenceInvoiceNumber, String returnInvoiceNumber,
			String invoiceDate, String paymentDate, String invoiceNotes, String returnQuantity)
			throws InterruptedException {
		companyDashboard.openModule("sales");
		salesModule.openCreateReturnInvoicePage();
		createNewReturnIncoicePage.CreateNewReturnInvoice(referenceInvoiceNumber, returnInvoiceNumber, invoiceDate,
				paymentDate, invoiceNotes, returnQuantity);
		Assert.assertTrue(salesModule.getSuccessMsg().contains("تم إنشاء الفاتورة"));
	}

	@Test(dataProvider = "getSalesReturnWithoutReferenceInvoiceData", priority = 2)
	public void createNewReturnInvoiceWithoutReferenceInvoice(String invoiceNumber, String clientName, String invoiceDate,
			String paymentDate, String invoiceNotes, String product, String category, String productDescription, String quantity,
			String discount, String VATCode) throws InterruptedException {
		companyDashboard.openModule("sales");
		salesModule.openCreateReturnInvoicePage();
		createNewReturnIncoicePage.CreateNewReturnInvoiceWithReferenceInvoiceStep1();
		createNewInvoicePage.CreateNewInvoiceStep1(invoiceNumber, clientName, invoiceDate, paymentDate, invoiceNotes);
		createNewInvoicePage.CreateNewInvoiceStep2(product, category, productDescription, quantity, discount, VATCode);
		Assert.assertTrue(salesModule.getSuccessMsg().contains("تم إنشاء الفاتورة"));
	}
	@Test (dataProvider = "getSalesCashbackInvoiceData", priority = 3)
	public void createNewCashbackSalesInvoice(String invoiceNumber, String clientName, String invoiceDate,
			String paymentDate, String invoiceNotes, String productPrice, String VATCode) throws InterruptedException {
		companyDashboard.openModule("sales");
		salesModule.openCreateReturnInvoicePage();
		createNewReturnIncoicePage.CreateNewCashbackInvoiceStep1();
		createNewInvoicePage.CreateNewInvoiceStep1(invoiceNumber, clientName, invoiceDate, paymentDate, invoiceNotes);
		createNewReturnIncoicePage.CreateNewCashbackInvoiceStep3(productPrice, VATCode);
		
	}

}
